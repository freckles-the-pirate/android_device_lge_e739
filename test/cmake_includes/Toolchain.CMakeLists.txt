include (CMakeForceCompiler)
# SET(CMAKE_SYSTEM_NAME eCos)

set (COMPILER_PREFIX "${TOOLCHAIN_PATH}/bin/arm-linux-androideabi")
CMAKE_FORCE_C_COMPILER("${COMPILER_PREFIX}-gcc" GNU)
CMAKE_FORCE_CXX_COMPILER("${COMPILER_PREFIX}-g++" GNU)

# where is the target environment 
SET(CMAKE_FIND_ROOT_PATH  ${ANDROID_ROOT} )

# search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# for libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)


function (set_android_prefix OUT_VAR)

    # This function will guess the includes directory based off the system
    # information.

    string (TOLOWER ${CMAKE_SYSTEM_NAME} OS_NAME)
    set (CUSTOM_INC_DIRECTORY ${CMAKE_SYSTEM_PROCESSOR})
    
    message(STATUS "Android root is ${ANDROID_ROOT}")
    
    find_path ( PREFIX_DIRS
        NAMES swap.h
        PATHS ${ANDROID_ROOT}
    )
    
#     if (PREFIX_DIRS AND ( NOT PREFIX_DIRS STREQUAL "/usr/local" ))
#         message(STATUS "Found these prefix directories: ${PREFIX_DIRS}")
#     elseif (PREFIX_DIRS AND (PREFIX_DIRS STREQUAL "/usr/local" ))
#         message(SEND_ERROR "Found system prefix. That's not what you want.")
#     else ( )
#         message(SEND_ERROR "Could not find Android's GCC prefix directory.")
#     endif (PREFIX_DIRS AND ( NOT PREFIX_DIRS STREQUAL "/usr/local" ))

    if (PREFIX_DIRS)
        message(STATUS "Found these prefix directories: ${PREFIX_DIRS}")
    else ( )
        message(SEND_ERROR "Could not find Android's GCC prefix directory.")
    endif ()
    
endfunction (set_android_prefix)